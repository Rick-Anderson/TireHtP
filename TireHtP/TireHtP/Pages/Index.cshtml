@page
@model TireHtP.Pages.IndexModel

@{
    ViewData["Title"] = "Index";
}

<h1>Tire drop vs. Pressure</h1>

<p>
    <a asp-page="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Tire[0].Model)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Tire[0].Height)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Tire[0].Width)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Tire[0].Weight)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Tire[0].WheelDiameter)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Tire[0].MaxPSI)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Tire)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Model)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Height)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Width)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Weight)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.WheelDiameter)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.MaxPSI)
                </td>
                <td>
                    <a asp-page="./Edit" asp-route-id="@item.Id">Edit</a> |
                    <a asp-page="./Details" asp-route-id="@item.Id">Details</a> |
                    <a asp-page="./Delete" asp-route-id="@item.Id">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>

<h2> Axle Height vs. PSI </h2>
<h3> static lift (drop): Dynamic lift (drop)</h3>

<table class="table">

    <thead>
        <tr>
            <th>PSI</th>

            @foreach (var item in Model.Tire)
            {
                var maxHt = item.Height / 2.0;
                <th>
                    @item.Height X @item.Width (Static:Dynamic)
                </th>
            }
        </tr>
    </thead>

    <tbody>


        @{ double psi = Model.Tire[0].MaxPSI;
            double diff = 0.0;

            while (psi >= 2)
            {
                <tr>

                    <td>
                        @psi
                    </td>
                    @foreach (var item in Model.Tire)
                    {

                    <td>
                        @{
                            var lift = Methods.Lift(item.Height, item.Weight, psi, item.Width);
                            diff = Math.Round(item.Height / 2.0 - lift, 2);

                            // dynLift use 3 times static weight. 3*3 == 9;
                            var dynLift = Methods.Lift(item.Height, item.Weight * 3, psi, item.Width);
                            var dynDiff = Math.Round(item.Height / 2.0 - dynLift, 2);

                            var stat = Methods.StrLiftAndDiff(diff, lift, item.WheelDiameter);
                            var dyn = Methods.StrLiftAndDiff(dynDiff, dynLift, item.WheelDiameter);

                            //string str_dynDiff = dynDiff.ToString();
                            //string str_dynLift = (dynLift > (item.WheelDiameter / 2.0 - .5) || dynLift.ToString().Equals("NaN") != true)
                            //    ? dynLift.ToString() : "Rim";

                            //if (str_dynLift.Equals("Rim"))
                            //{
                            //    str_dynDiff = "X";
                            //}
                        }
                        @stat.Item1 (@stat.Item2) @dyn.Item1 (@dyn.Item2)
                        @*@lift (@diff) : @str_dynLift (@str_dynDiff)*@
                    </td>

                    }
                </tr>
                if (@diff < .1)
                {
                    psi -= 3.0;
                }
                else
                {
                    psi -= 1.0;
                }
            }
        }
    </tbody>

</table>


